<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>install on Ibiza</title>
    <link>http://kimmj.github.io/tags/install/</link>
    <description>Recent content in install on Ibiza</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jan 2020 02:26:45 +0900</lastBuildDate>
    
	<atom:link href="http://kimmj.github.io/tags/install/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>http://kimmj.github.io/category/kubernetes/install/overview/</link>
      <pubDate>Tue, 14 Jan 2020 01:42:53 +0900</pubDate>
      
      <guid>http://kimmj.github.io/category/kubernetes/install/overview/</guid>
      <description>저의 vm으로 구성한 클러스터를 설명드리고자 합니다.
 Cloud Provider: Kubernetes on-prem (4 VMs)  1 for master (4GB Mem, 1 CPU) 3 for worker (each 8GM Mem, 4 CPU)   Kubernetes 1.17.0 Storage Class: Ceph OS: Ubuntu 18.04.2 Server Internal Network: VirtualBox Host-Only Ethernet Adapter (192.168.x.0/24) External Network: Bridge to adapter (192.168.y.0/24)  한번에 쳐야하는 명령어가 많기 때문에, tmux를 사용해서 여러개의 pane을 생성하고 각각에 대해 ssh로 접속하였습니다.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>http://kimmj.github.io/category/ci-cd/spinnaker/installation/overview/</link>
      <pubDate>Fri, 10 Jan 2020 01:02:39 +0900</pubDate>
      
      <guid>http://kimmj.github.io/category/ci-cd/spinnaker/installation/overview/</guid>
      <description>Overview of install Spinnaker 어떻게 Spinnaker를 설치 및 배포하는지 알아보도록 하겠습니다.
가장 먼저 최소 사양을 확인해보도록 하겠습니다.
링크 : https://www.spinnaker.io/guides/developer/getting-set-up/#system-requirements
 램 18 GB CPU 4코어 Ubuntu 14.04, 16.04, 18.04  Spinnaker 자체가 클라우드 환경에만 배포가 가능하기 때문에, 아마도 &amp;ldquo;전체 클라우드를 합하여 저정도면 된다&amp;quot;를 의미하는 것 같습니다.
설치 방법은 두가지로 나뉩니다.
 테스트를 목적으로 Helm Chart를 통한 설치 실제로 사용할 목적으로 halyard를 통한 설치  저는 여기서 2번 halyard를 통한 설치를 해보려고 합니다.</description>
    </item>
    
    <item>
      <title>Install and Setup Kubectl</title>
      <link>http://kimmj.github.io/category/kubernetes/install/install-and-setup-kubectl/</link>
      <pubDate>Tue, 14 Jan 2020 02:26:45 +0900</pubDate>
      
      <guid>http://kimmj.github.io/category/kubernetes/install/install-and-setup-kubectl/</guid>
      <description>시작에 앞서, 공식 docs에서는 kubectl 버전이 minor 버전 하나정도만 차이나도록 하라고 하고 있습니다. 예를 들어, v1.16.x인 client(worker, master 포함)가 있다면, v1.15.x나 v1.17.x까지만 허용합니다.
Linux에 kubectl 설치 curl을 이용하는 방법, snap이나 homebrew를 이용하는 방법, native package management를 이용하는 방법이 있습니다. 그 중에서 curl을 이용하는 방법을 다루도록 하겠습니다.
  curl을 통해서 kubectl을 설치합니다.
curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl curl 안에 curl을 넣어서 최신 버전의 stable을 가지고오도록 하고있네요. 이를 응용하면 특정한 버전의 kubectl도 가지고 올 수 있을 것입니다.</description>
    </item>
    
    <item>
      <title>Install Halyard</title>
      <link>http://kimmj.github.io/category/ci-cd/spinnaker/installation/install-halyard/</link>
      <pubDate>Sat, 11 Jan 2020 01:41:08 +0900</pubDate>
      
      <guid>http://kimmj.github.io/category/ci-cd/spinnaker/installation/install-halyard/</guid>
      <description>halyard란? halyard는 Spinnaker를 배포할 때 사용하는 CLI 툴입니다.
halyard는 Spinnaker 관련 설정들의 validation, 배포한 환경 백업, 설정 추가 및 변경에 사용됩니다.
설치 방법 선택하기 총 2가지 방법으로 halyard를 설치할 수 있습니다.
 Debian/Ubuntu나 macOS에 직접 설치하기 Docker 사용하기  Spinnaker Docs에서는 실제 Production 환경이라면 직접 설치하는 방법을, 그게 아니라 간단하게 사용하려면 docker를 사용해도 된다고 하고 있습니다.
그리고 한가지의 옵션이 더 있습니다.
 인터넷이 되지 않는 환경 (프록시나 방화벽 등으로 halyard를 통한 설치가 어려운 경우)  이 글을 작성하고 있는 환경은 인터넷이 잘 되는 환경입니다.</description>
    </item>
    
    <item>
      <title>How to Edit Boot Parameter During Install</title>
      <link>http://kimmj.github.io/category/ubuntu/how-to-edit-boot-parameter-during-install/</link>
      <pubDate>Wed, 08 Jan 2020 01:52:12 +0900</pubDate>
      
      <guid>http://kimmj.github.io/category/ubuntu/how-to-edit-boot-parameter-during-install/</guid>
      <description>Ubuntu 설치할 때 boot parameter가 필요한 상황이 간혹 발생할 수 있습니다.
특히 저의 경우, preseed.cfg를 수정하기 위해 인스톨러가 질의하는 것이 preseed.cfg의 어떤것과 대응이 되는지를 보기 위해 DEBCONF_DEBUG=5라는 옵션을 boot parameter로 주어야 했습니다. 이 때 사용할 수 있는 방법을 소개드립니다.
먼저 평소와 같이 ubuntu를 설치하기 위해 설치 이미지를 삽입합니다. 그 다음에는 언어를 선택하시면, 다음으로 넘어가기 전에 메뉴가 뜹니다.
이 상태에서 F6을 누르시면 옵션을 선택할 수 있고, 이 때 ESC키를 누르면 boot parameter가 하단에 보일 것입니다.</description>
    </item>
    
  </channel>
</rss>